{"version":3,"sources":["webpack:///./node_modules/@chakra-ui/layout/dist/esm/heading.js","webpack:///./src/components/card.tsx","webpack:///./src/pages/index.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","Heading","props","ref","styles","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","h2","className","__css","displayName","Card","node","frontmatter","fields","slug","title","excerpt","as","GatsbyLink","to","textDecoration","BlogIndex","data","useStaticQuery","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","location","keywords","spacing","size","map"],"mappings":"+PAAA,SAASA,IAeP,OAdAA,EAAWC,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAII,KAAOD,EACVN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,IAK3B,OAAOL,IAGOS,MAAMC,KAAMR,WAqBvB,IAAIS,EAAuB,aAAW,SAAUC,EAAOC,GAC5D,IAAIC,EAAS,YAAe,UAAWF,GAGnCG,EAtBN,SAAuCX,EAAQY,GAC7C,GAAc,MAAVZ,EAAgB,MAAO,GAC3B,IAEIC,EAAKJ,EAFLD,EAAS,GACTiB,EAAanB,OAAOoB,KAAKd,GAG7B,IAAKH,EAAI,EAAGA,EAAIgB,EAAWd,OAAQF,IACjCI,EAAMY,EAAWhB,GACbe,EAASG,QAAQd,IAAQ,IAC7BL,EAAOK,GAAOD,EAAOC,IAGvB,OAAOL,EAUIoB,CADa,YAAiBR,GACmB,CAAC,cAE7D,OAAoB,gBAAoB,IAAOS,GAAIxB,EAAS,CAC1DgB,IAAKA,EACLS,UAAW,YAAG,iBAAkBV,EAAMU,YACrCP,EAAM,CACPQ,MAAOT,QAIP,MACFH,EAAQa,YAAc,W,4BC9CXC,EAAO,SAAC,GAAuC,IAArCC,EAAqC,EAArCA,KACfC,EAAcD,EAAMC,YACpBC,EAASF,EAAME,OACfC,EAAOD,EAAOC,KAEdC,GADUJ,EAAMK,QACRJ,EAAYG,OAASF,EAAOC,MAC1C,OACE,kBAAC,IAAD,CAAKxB,IAAKwB,GACR,kBAAC,IAAD,CAAMG,GAAIC,OAAYC,GAAIL,EAAMM,eAAgB,UAC7CL,KCkDMM,UAlDG,SAACxB,GACjB,IAAMyB,EAAOC,yBAAe,aAyBtBC,EAAYF,EAAKG,KAAKC,aAAaX,MACnCY,EAAQL,EAAKM,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQC,SAAUjC,EAAMiC,SAAUf,MAAOS,GACvC,kBAAC,IAAD,CACET,MAAM,YACNgB,SAAU,CAAC,OAAD,iCAEZ,kBAAC,IAAD,CAAOC,QAAS,IACd,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAOA,QAAS,GACd,kBAACpC,EAAD,CAASqB,GAAI,KAAMgB,KAAM,MAAzB,WAGCN,EAAMO,KAAI,gBAAGvB,EAAH,EAAGA,KAAH,OACT,kBAAC,EAAD,CAAMA,KAAMA","file":"component---src-pages-index-tsx-2325fcf6a1515a22c090.js","sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nexport var Heading = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"Heading\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"className\"]);\n\n  return /*#__PURE__*/React.createElement(chakra.h2, _extends({\n    ref: ref,\n    className: cx(\"chakra-heading\", props.className)\n  }, rest, {\n    __css: styles\n  }));\n});\n\nif (__DEV__) {\n  Heading.displayName = \"Heading\";\n}","import React from \"react\"\r\nimport { Link as GatsbyLink } from \"gatsby\"\r\nimport { MarkdownRemark } from \"../graphql-types\"\r\nimport { Heading, Text, Box, Link } from \"@chakra-ui/react\"\r\n\r\nexport const Card = ({ node }: { node: MarkdownRemark }) => {\r\n  const frontmatter = node!.frontmatter!\r\n  const fields = node!.fields!\r\n  const slug = fields.slug!\r\n  const excerpt = node!.excerpt!\r\n  const title = frontmatter.title || fields.slug\r\n  return (\r\n    <Box key={slug}>\r\n      <Link as={GatsbyLink} to={slug} textDecoration={\"dotted\"}>\r\n        {title}\r\n      </Link>\r\n      {/* <p\r\n        dangerouslySetInnerHTML={{\r\n          __html: frontmatter.description || excerpt,\r\n        }}\r\n      /> */}\r\n    </Box>\r\n  )\r\n}\r\n","import { graphql, PageRendererProps, useStaticQuery } from \"gatsby\"\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Bio } from \"../components/bio\"\r\nimport { Layout } from \"../components/layout\"\r\nimport { FadeLink } from \"../components/link\"\r\nimport { SEO } from \"../components/seo\"\r\nimport { MarkdownRemark } from \"../graphql-types\"\r\nimport { rhythm } from \"../utils/typography\"\r\nimport { Heading, Stack } from \"@chakra-ui/react\"\r\nimport { Card } from \"../components/card\"\r\n\r\ntype Props = PageRendererProps\r\n\r\nconst BlogIndex = (props: Props) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n      allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n        edges {\r\n          node {\r\n            excerpt\r\n            fields {\r\n              slug\r\n            }\r\n            frontmatter {\r\n              date(formatString: \"MMMM DD, YYYY\")\r\n              title\r\n              description\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const siteTitle = data.site.siteMetadata.title\r\n  const posts = data.allMarkdownRemark.edges\r\n\r\n  return (\r\n    <Layout location={props.location} title={siteTitle}>\r\n      <SEO\r\n        title=\"All posts\"\r\n        keywords={[`blog`, `gatsby`, `javascript`, `react`]}\r\n      />\r\n      <Stack spacing={12}>\r\n        <Bio />\r\n        <Stack spacing={8}>\r\n          <Heading as={\"h4\"} size={\"md\"}>\r\n            Updates\r\n          </Heading>\r\n          {posts.map(({ node }: { node: MarkdownRemark }) => (\r\n            <Card node={node} />\r\n          ))}\r\n        </Stack>\r\n      </Stack>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n"],"sourceRoot":""}