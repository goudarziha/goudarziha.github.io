{"version":3,"sources":["webpack:///./node_modules/@chakra-ui/layout/dist/esm/divider.js","webpack:///./src/templates/blog-post.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","Divider","props","ref","_useStyleConfig","borderLeftWidth","borderBottomWidth","borderTopWidth","borderRightWidth","borderWidth","borderStyle","borderColor","styles","_omitThemingProps","className","_omitThemingProps$ori","orientation","__css","rest","dividerStyles","vertical","height","horizontal","width","hr","border","displayName","BlogPostTemplate","data","post","markdownRemark","excerpt","frontmatter","html","siteTitle","site","siteMetadata","title","pageContext","previous","next","location","description","spacing","mt","as","fontSize","date","dangerouslySetInnerHTML","__html","direction","justify","GatsbyLink","to","fields","slug","rel"],"mappings":"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","file":"component---src-templates-blog-post-tsx-3c82659da1ef5504d27a.js","sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * Layout component used to visually separate content in a list or group.\n * It display a thin horizontal or vertical line, and renders a `hr` tag.\n *\n * @see Docs https://chakra-ui.com/divider\n */\n\nexport var Divider = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _useStyleConfig = useStyleConfig(\"Divider\", props),\n      borderLeftWidth = _useStyleConfig.borderLeftWidth,\n      borderBottomWidth = _useStyleConfig.borderBottomWidth,\n      borderTopWidth = _useStyleConfig.borderTopWidth,\n      borderRightWidth = _useStyleConfig.borderRightWidth,\n      borderWidth = _useStyleConfig.borderWidth,\n      borderStyle = _useStyleConfig.borderStyle,\n      borderColor = _useStyleConfig.borderColor,\n      styles = _objectWithoutPropertiesLoose(_useStyleConfig, [\"borderLeftWidth\", \"borderBottomWidth\", \"borderTopWidth\", \"borderRightWidth\", \"borderWidth\", \"borderStyle\", \"borderColor\"]);\n\n  var _omitThemingProps = omitThemingProps(props),\n      className = _omitThemingProps.className,\n      _omitThemingProps$ori = _omitThemingProps.orientation,\n      orientation = _omitThemingProps$ori === void 0 ? \"horizontal\" : _omitThemingProps$ori,\n      __css = _omitThemingProps.__css,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"className\", \"orientation\", \"__css\"]);\n\n  var dividerStyles = {\n    vertical: {\n      borderLeftWidth: borderLeftWidth || borderRightWidth || borderWidth || \"1px\",\n      height: \"100%\"\n    },\n    horizontal: {\n      borderBottomWidth: borderBottomWidth || borderTopWidth || borderWidth || \"1px\",\n      width: \"100%\"\n    }\n  };\n  return /*#__PURE__*/React.createElement(chakra.hr, _extends({\n    ref: ref,\n    \"aria-orientation\": orientation\n  }, rest, {\n    __css: _extends({}, styles, {\n      border: \"0\",\n      borderColor: borderColor,\n      borderStyle: borderStyle\n    }, dividerStyles[orientation], __css),\n    className: cx(\"chakra-divider\", className)\n  }));\n});\n\nif (__DEV__) {\n  Divider.displayName = \"Divider\";\n}","import { graphql, PageRendererProps, Link as GatsbyLink } from \"gatsby\"\r\nimport React from \"react\"\r\nimport { Bio } from \"../components/bio\"\r\nimport { Layout } from \"../components/layout\"\r\nimport { SEO } from \"../components/seo\"\r\nimport { Query, SitePageContext } from \"../graphql-types\"\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Link,\r\n  Stack,\r\n  Text,\r\n  Heading,\r\n  Divider,\r\n} from \"@chakra-ui/react\"\r\n\r\ninterface Props extends PageRendererProps {\r\n  pageContext: SitePageContext\r\n  data: Query\r\n}\r\n\r\nconst BlogPostTemplate = (props: Props) => {\r\n  const data = props.data!\r\n  const post = data.markdownRemark!\r\n  const excerpt = post.excerpt!\r\n  const frontmatter = post.frontmatter!\r\n  const html = post.html!\r\n  const siteTitle = data.site!.siteMetadata!.title!\r\n  const { previous, next } = props.pageContext\r\n\r\n  return (\r\n    <Layout location={props.location} title={siteTitle}>\r\n      <SEO\r\n        title={frontmatter.title!}\r\n        description={frontmatter.description || excerpt}\r\n      />\r\n      <Stack spacing={12}>\r\n        <Box mt={12}>\r\n          <Stack spacing={2}>\r\n            <Heading as={\"h2\"} fontSize={\"2xl\"}>\r\n              {post.frontmatter!.title}\r\n            </Heading>\r\n            <Text fontSize={\"sm\"}>{frontmatter.date}</Text>\r\n          </Stack>\r\n        </Box>\r\n        <div dangerouslySetInnerHTML={{ __html: html }} />\r\n\r\n        <Flex direction={\"row\"} justify={\"space-between\"}>\r\n          {previous && (\r\n            <Link as={GatsbyLink} to={previous.fields!.slug!} rel=\"prev\">\r\n              ← {previous.frontmatter!.title}\r\n            </Link>\r\n          )}\r\n          {next && (\r\n            <Link as={GatsbyLink} to={next.fields!.slug!} rel=\"next\">\r\n              {next.frontmatter!.title} →\r\n            </Link>\r\n          )}\r\n        </Flex>\r\n        <Divider />\r\n        <Bio />\r\n      </Stack>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}